[{"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js":"1","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js":"2","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js":"3","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js":"4","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js":"5","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/LetterToSanta.js":"6","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js":"7","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js":"8","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js":"9","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js":"10","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js":"11","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js":"12","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js":"13","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js":"14","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js":"15","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js":"16"},{"size":416,"mtime":1607990755697,"results":"17","hashOfConfig":"18"},{"size":750,"mtime":1610426388522,"results":"19","hashOfConfig":"18"},{"size":4110,"mtime":1610426599592,"results":"20","hashOfConfig":"18"},{"size":220,"mtime":1606693340905,"results":"21","hashOfConfig":"18"},{"size":2311,"mtime":1607830268994,"results":"22","hashOfConfig":"18"},{"size":148,"mtime":1606695805435,"results":"23","hashOfConfig":"18"},{"size":132,"mtime":1606871041107,"results":"24","hashOfConfig":"18"},{"size":2288,"mtime":1608076954671,"results":"25","hashOfConfig":"18"},{"size":2580,"mtime":1610490384049,"results":"26","hashOfConfig":"18"},{"size":153,"mtime":1606695744305,"results":"27","hashOfConfig":"18"},{"size":137,"mtime":1606697923049,"results":"28","hashOfConfig":"18"},{"size":5197,"mtime":1610427923757,"results":"29","hashOfConfig":"18"},{"size":2534,"mtime":1610491234613,"results":"30","hashOfConfig":"18"},{"size":890,"mtime":1610414756568,"results":"31","hashOfConfig":"18"},{"size":773,"mtime":1610412579335,"results":"32","hashOfConfig":"18"},{"size":2719,"mtime":1610426376646,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"es6r8m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js",["73"],"\nexport default function (state, action) {\n    switch(action.type) {  \n        case \"setLoggedInUser\": {\n            return {\n                ...state,\n                loggedInUser: action.data\n            }\n        }  \n\n        case \"setGiftLists\": {  \n            return { \n                ...state, \n                giftLists: action.data\n            }\n        }\n        default: \n            return state\n    }\n}","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js",["74","75","76","77"],"import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport { useGlobalState } from \"../../config/store\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ChristmasButton from \"../ChristmasButton\";\nimport {\n  faGift,\n  faSnowflake,\n  faStar,\n  faHollyBerry,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/styles.scss\";\nimport { deleteGiftList, getGiftList } from \"../../services/giftListServices\";\n\nconst GiftList = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { giftLists, loggedInUser } = store;\n\n  let [listData, setListData] = useState(\"\");\n\n  useEffect(() => {\n    extractData();\n    setListData(listData);\n    console.log(giftLists);\n  }, (listData = \"\")); \n\n  useEffect(()=>{ \n    if (!loggedInUser){ \n      props.history.push(\"/login\")\n    }\n  })\n\n  const randomColor = () => {\n    const colors = [\n      \"#e99481\",\n      \"#e9ae81\",\n      \"#e9e481\",\n      \"#b7e981\",\n      \"#85e981\",\n      \"#81e9c1\",\n      \"#81dee9\",\n      \"#819be9\",\n      \"#9d81e9\",\n      \"#e981e9\",\n      \"#e98193\",\n    ];\n    const randomNumber = Math.floor(Math.random() * colors.length);\n    return colors[randomNumber];\n  };\n\n  const randomIcon = () => {\n    const icons = [faGift, faHollyBerry, faSnowflake, faStar];\n    const randomNumber = Math.floor(Math.random() * icons.length);\n    return icons[randomNumber];\n  };\n\n  const randomBoxStyle = () => {\n    const boxStyles = [\n      \"styledBoxTrapez\",\n      \"styledBoxSquare\",\n      \"styledBoxPentagon\",\n    ];\n    const randomNumber = Math.floor(Math.random() * boxStyles.length);\n\n    return boxStyles[randomNumber];\n  };\n\n  const extractData = async () => {\n    await getGiftList(loggedInUser)\n      .then((data) => {\n        listData = [data];\n        console.log(data);\n        data.map((v, i) => {\n          let tempGifts = [];\n          v.gifts.map((v, i) => {\n            tempGifts.push(v.gift);\n          });\n\n          const receiver = v.receiver;\n          const user = v.user;\n          const _id = v._id;\n\n          giftLists[v.uid] = {\n            receiver: receiver,\n            user: user,\n            gifts: tempGifts,\n            _id: _id,\n            color: randomColor(),\n            cardShape: randomBoxStyle(),\n            icon: randomIcon(),\n          };\n        });\n\n        dispatch({\n          type: \"setGiftLists\",\n          data: giftLists,\n        });\n      })\n      .catch(console.log);\n  };\n\n  let randomId = uuidv4();\n\n  const addList = (event) => {\n    event.preventDefault();\n\n    giftLists[randomId] = {};\n\n    giftLists[randomId].cardShape = randomBoxStyle();\n\n    giftLists[randomId].icon = randomIcon();\n\n    giftLists[randomId].color = randomColor();\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  const deleteList = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    delete giftLists[event.target.id];\n\n    let uid = event.target.id;\n\n    deleteGiftList(loggedInUser, uid)\n      .then(() => {\n        dispatch({\n          type: \"setGiftLists\",\n          data: giftLists,\n        });\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <div>\n      <div class=\"headerButton\">\n        <h1 class=\"giftListHeader\">Gift List</h1>\n\n        <div class=\"d-flex m-3\">\n          <ChristmasButton onClick={addList} text=\"Add Gift List\" />\n        </div>\n      </div>\n\n      <div class=\"row row-cols-3 d-flex justify-content-around\">\n        {Object.keys(giftLists).length > 0 &&\n          Object.keys(giftLists).map((v, i) => {\n            return (\n              <div>\n                <div class=\"col my-3 d-flex flex-column align-items-center\">\n                  <List identifer={v} />\n                  <div class=\"my-3\" onClick={deleteList}>\n                    <ChristmasButton\n                      id={v}\n                      text=\"Delete List\"\n                      onClick={deleteList}\n                      className=\"deleteList\"\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default GiftList;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js",["78"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/LetterToSanta.js",[],["79","80"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js",["81"],"import React, {useReducer, useEffect} from 'react'\nimport {BrowserRouter, Route} from 'react-router-dom'  \nimport stateReducer from './config/stateReducer'\nimport {StateContext} from './config/store'\nimport Login from \"./components/login\"  \nimport Home from \"./components/Home\" \nimport SignUp from \"./components/Register\" \nimport AboutUs from \"./components/AboutUs\" \nimport LetterToSanta from \"./components/LetterToSanta\" \nimport GiftList from \"./components/giftList/GiftList\" \nimport AdventCalender from \"./components/AdventCalender\" \nimport Nav from \"./components/Nav\" \nimport SocialsBar from \"./components/SocialsBar\"; \nimport \"./styles/partials/cane.scss\"\n\n\n\n\nfunction App() {   \n\n  // const initialState = { \n  //   giftLists: {}\n  // } \n    const initialState = { \n    giftLists: {}\n  } \n\n  const [store, dispatch] = useReducer(stateReducer,initialState) \n\n  return ( \n    <div>   \n    \n      <StateContext.Provider value={{store,dispatch}}>\n        <BrowserRouter>  \n          \n          <div class=\"allPageContainer\">  \n\n            <div class=\"row p-0 m-0 d-flex justify-content-center\"> \n              \n              <div class=\"col-1 p-0\"> \n              <div class=\"leftCane\"></div> \n              </div>  \n\n              <div class=\"col-10 p-0 d-flex flex-column justify-content-between allPageGrid\">  \n              <Nav/>   \n\n              <div class=\"d-flex flex-column align-items-center text-center\">\n              <Route exact path=\"/login\" component={Login} />  \n              <Route exact path=\"/signup\" component={SignUp} />   \n              <Route exact path=\"/about-us\" component={AboutUs} /> \n              <Route exact path=\"/letter-to-santa\" component={LetterToSanta} /> \n              <Route exact path=\"/gift-list\" component={GiftList} /> \n              <Route exact path=\"/advent-calender\" component={AdventCalender} /> \n              <Route exact path=\"/\" component={Home} />  \n              </div> \n              <SocialsBar/>\n              </div>   \n             \n              \n              <div class=\"col-1 p-0\"> \n              <div class=\"rightCane\"></div>  \n              </div>  \n            </div> \n            \n          </div>   \n\n        </BrowserRouter>\n      </StateContext.Provider>  \n      </div>  \n      \n    \n  );\n}\n\nexport default App; \n",["82","83"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js",["84","85"],"import React from \"react\";\nimport \"../../styles/pages/giftCards.scss\";\nimport { useGlobalState } from \"../../config/store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { addGiftList, updateGiftList } from \"../../services/giftListServices\";\n\nconst List = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { giftLists, loggedInUser } = store;\n  const { identifer } = props;\n\n  //   deletes a selected gift and updates global state\n  const deleteGift = (event) => {\n    event.preventDefault();\n\n    giftLists[identifer].gifts.splice(event.target.getAttribute(\"index\"), 1);\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  const ColoredButton = styled.button`\n    color: #3f3f3f;\n    background-color: ${giftLists[identifer].color};\n\n    :hover {\n      background-color: #3f3f3f;\n      color: ${giftLists[identifer].color};\n    }\n  `;\n\n  // adds a gift to the global state\n  const saveList = (event) => {\n    event.preventDefault();\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts = [event.target.addItem.value];\n\n      giftLists[identifer].receiver = event.target.name.value;\n\n      const restructuredGiftListSave = {\n        gifts: [{ gift: event.target.addItem.value }],\n        receiver: giftLists[identifer].receiver,\n        uid: identifer,\n      };\n\n      addGiftList(restructuredGiftListSave, loggedInUser)\n        .then(() => {\n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const updateList = (event) => {\n    event.preventDefault();\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts.push(event.target.addItem.value);\n\n      const restructuredGiftListUpdate = {\n        gifts: [{ gift: event.target.addItem.value }],\n        uid: identifer,\n      };\n\n      updateGiftList(restructuredGiftListUpdate, loggedInUser)\n        .then(() => {\n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const meColor = (event) => {\n    giftLists[identifer].color = event.target.value;\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  let cardStyle =\n    \"d-flex align-items-center justify-content-center flex-column\" +\n    ` ${giftLists[identifer].cardShape}`;\n\n  return (\n    <div\n      id={identifer}\n      style={{ backgroundColor: `${giftLists[identifer].color}` }}\n      class={cardStyle}\n    >\n      {console.log(giftLists[identifer].receiver)}\n      {console.log(giftLists[identifer])}\n\n      <div class=\"hole\"></div>\n      <form\n        class=\"d-flex flex-column align-items-center giftForm\"\n        onSubmit={giftLists[identifer].receiver ? updateList : saveList}\n      >\n        {giftLists[identifer].receiver ? (\n          <h3>{giftLists[identifer].receiver}</h3>\n        ) : (\n          <div>\n            <h3>Name</h3>\n            <input\n              class=\"nameInput\"\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={giftLists[identifer].receiver}\n              required\n            />\n          </div>\n        )}\n        <div class=\"row row-cols-2\">\n          {giftLists[identifer].gifts &&\n            giftLists[identifer].gifts.map((v, i) => {\n              return (\n                <div\n                  key={i}\n                  class=\"gift col d-flex justify-content-center my-2\"\n                >\n                  <h4></h4>\n                  <p class=\"m-1\">{v}</p>\n                  <ColoredButton\n                    class={\"deleteGift\" + \"cardButton\"}\n                    index={i}\n                    onClick={deleteGift}\n                  >\n                    <div index={i}>Delete</div>\n                  </ColoredButton>\n                </div>\n              );\n            })}\n        </div>\n        List:\n        <input class=\"giftInput\" type=\"text\" name=\"addItem\" required></input>\n        <input\n          type=\"color\"\n          list=\"presetColors\"\n          value={giftLists[identifer].color}\n          onChange={meColor}\n        />\n        <datalist id=\"presetColors\">\n          <option>#ff857a</option>\n          <option>#e9ae81</option>\n          <option>#e9e481</option>\n          <option>#b7e981</option>\n          <option>#85e981</option>\n          <option>#81e9c1</option>\n          <option>#81dee9</option>\n          <option>#819be9</option>\n          <option>#9d81e9</option>\n          <option>#e981e9</option>\n          <option>#e98193</option>\n        </datalist>\n        <input\n          class=\"giftSubmit\"\n          type=\"submit\"\n          name=\"makeList\"\n          value={giftLists[identifer].receiver ? \"Add Gift\" : \"Save List\"}\n        />\n      </form>\n\n      <div class=\"d-flex align-items-center my-2\">\n        <div class=\"line\"></div>\n        <FontAwesomeIcon\n          className=\"giftCardIcon\"\n          icon={giftLists[identifer].icon}\n        />\n        <div class=\"line\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js",["86"],"import React, { useState } from \"react\";\nimport { useGlobalState } from \"../config/store\";\nimport { loginUser } from \"../services/authServices\";  \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSleigh} from \"@fortawesome/free-solid-svg-icons\"; \nimport { Link } from \"react-router-dom\";\nimport \"../styles/pages/loginRegister.scss\";\n\n\n\n\nconst Login = ({ history }) => {\n  const initialFormState = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const [userDetails, setUserDetails] = useState(initialFormState);\n\n  const [errors, setErrors] = useState([]);\n\n  const { dispatch, store } = useGlobalState();\n\n  const detailsChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setUserDetails({\n      ...userDetails,\n      [name]: value,\n    });\n  };\n\n  const loginSubmit = (event) => {\n    event.preventDefault();\n\n    loginUser(userDetails)\n      .then((data) => {\n        console.log(data);\n        dispatch({\n          type: \"setLoggedInUser\",\n          data: data._id,\n        });\n        console.log(userDetails);\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setErrors([1]);\n      });\n  };\n\n  return ( \n\n    <div>\n    <div class=\"loginBorder d-flex align-items-center flex-column justify-content-center\" >   \n\n      <div class=\"d-flex flex-column align-items-center\">\n            <FontAwesomeIcon className=\"loginLogo my-4\" icon={faSleigh} />\n            <p class=\"m-0 loginLogoText\">North Pole Post</p>\n          </div>\n\n      {errors.length > 0 ? <h5 class=\"errors\">Invalid Credentials</h5> : \"\"}\n      <form class=\"login d-flex flex-column align-items-center\" onSubmit={loginSubmit}>\n        \n        \n          <label>Username</label>\n          <input\n            required\n            class=\"username mb-2\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Enter a username\"\n            onChange={detailsChange}\n          ></input>\n        \n        \n        \n          <label>Password</label>\n          <input\n            required\n            class=\"password mb-2\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter a password\"\n            onChange={detailsChange}\n          ></input>\n         \n\n        <input class=\"christmasInputButton m-2\" type=\"submit\" value=\"Login\"></input>\n      </form>  \n\n    </div>  \n    <p class=\"m-2\">Dont have an account? <Link to=\"/signup\"><u>Sign Up</u></Link></p>\n    </div>\n  );\n};\n\nexport default Login;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js",[],{"ruleId":"87","severity":1,"message":"88","line":2,"column":1,"nodeType":"89","endLine":20,"endColumn":2},{"ruleId":"90","severity":1,"message":"91","line":25,"column":7,"nodeType":"92","endLine":25,"endColumn":20},{"ruleId":"90","severity":1,"message":"93","line":25,"column":7,"nodeType":"92","endLine":25,"endColumn":20,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":73,"column":25,"nodeType":"97","messageId":"98","endLine":73,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":75,"column":30,"nodeType":"97","messageId":"98","endLine":75,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":47,"column":5,"nodeType":"101","endLine":47,"endColumn":160},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":37},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":137,"column":19,"nodeType":"101","endLine":137,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":140,"column":41,"nodeType":"116","messageId":"117","endLine":140,"endColumn":42},{"ruleId":"106","severity":1,"message":"118","line":22,"column":21,"nodeType":"108","messageId":"109","endLine":22,"endColumn":26},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","AssignmentExpression","React Hook useEffect has missing dependencies: 'extractData', 'giftLists', and 'listData'. Either include them or remove the dependency array. You can also do a functional update 'setListData(l => ...)' if you only need 'listData' in the 'setListData' call.",["119"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["120"],["121"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'store' is assigned a value but never used.",{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [extractData, giftLists, listData]",{"range":"124","text":"125"},[709,722],"[extractData, giftLists, listData]"]