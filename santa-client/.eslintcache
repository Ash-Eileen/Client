[{"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js":"1","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js":"2","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js":"3","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js":"4","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js":"5","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js":"6","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js":"7","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js":"8","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js":"9","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js":"10","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js":"11","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js":"12","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js":"13","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js":"14","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js":"15","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaController.js":"16","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaChild.js":"17","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaParent.js":"18","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/AddChildForm.js":"19","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/childGiftListServices.js":"20","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/authServices.js":"21"},{"size":443,"mtime":1610929334617,"results":"22","hashOfConfig":"23"},{"size":750,"mtime":1610426388522,"results":"24","hashOfConfig":"23"},{"size":4088,"mtime":1610937760173,"results":"25","hashOfConfig":"23"},{"size":220,"mtime":1606693340905,"results":"26","hashOfConfig":"23"},{"size":3544,"mtime":1610944137707,"results":"27","hashOfConfig":"23"},{"size":132,"mtime":1606871041107,"results":"28","hashOfConfig":"23"},{"size":2786,"mtime":1610945927358,"results":"29","hashOfConfig":"23"},{"size":2580,"mtime":1610490384049,"results":"30","hashOfConfig":"23"},{"size":153,"mtime":1606695744305,"results":"31","hashOfConfig":"23"},{"size":161,"mtime":1610929225198,"results":"32","hashOfConfig":"23"},{"size":5478,"mtime":1610941099593,"results":"33","hashOfConfig":"23"},{"size":2393,"mtime":1610946283621,"results":"34","hashOfConfig":"23"},{"size":890,"mtime":1610414756568,"results":"35","hashOfConfig":"23"},{"size":773,"mtime":1610412579335,"results":"36","hashOfConfig":"23"},{"size":2768,"mtime":1610943981402,"results":"37","hashOfConfig":"23"},{"size":743,"mtime":1610508662446,"results":"38","hashOfConfig":"23"},{"size":4916,"mtime":1610946973123,"results":"39","hashOfConfig":"23"},{"size":5256,"mtime":1610933197806,"results":"40","hashOfConfig":"23"},{"size":1788,"mtime":1610929334570,"results":"41","hashOfConfig":"23"},{"size":905,"mtime":1610929334629,"results":"42","hashOfConfig":"23"},{"size":1040,"mtime":1610931487235,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"es6r8m",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js",["95"],"export default function (state, action) {\n  switch (action.type) {\n    case \"setLoggedInUser\": {\n      return {\n        ...state,\n        loggedInUser: action.data,\n      };\n    }\n\n    case \"setGiftLists\": {\n      return {\n        ...state,\n        giftLists: action.data,\n      };\n    }\n\n    case \"setLetterToSanta\": {\n      return {\n        ...state,\n        letterToSanta: action.data,\n      };\n    }\n    default:\n      return state;\n  }\n}\n",["96","97"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js",["98","99","100","101"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js",[],["102","103"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js",["104"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalState } from \"../config/store\";\nimport {\n  logoutUser,\n  setLoggedInUser,\n} from \"../services/authServices\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSleigh, faCandyCane } from \"@fortawesome/free-solid-svg-icons\";\nimport ChristmasButton from \"./ChristmasButton\";\nimport \"../styles/pages/nav.scss\";\n\nconst Nav = () => {\n  const { store, dispatch } = useGlobalState();\n  const { loggedInUser } = store;\n\n  const logout = (event) => {\n    const letterToSanta = {\n      parentMode: true,\n      addForm: false,\n      currentChild: false,\n      children: [],\n    };\n\n    const giftLists = {};\n\n    logoutUser(loggedInUser)\n      .then(() => {\n        setLoggedInUser();\n\n        dispatch({\n          type: \"setLoggedInUser\",\n          data: null,\n        });\n\n        dispatch({\n          type: \"setGiftLists\",\n          data: giftLists,\n        });\n\n        dispatch({\n          type: \"setLetterToSanta\",\n          data: letterToSanta,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }; \n\n  return (\n    <div class=\"row mt-2\">\n      <div class=\"col\">\n        <Link to=\"/\">\n          <div class=\"d-flex flex-column align-items-center\">\n            <FontAwesomeIcon className=\"logo\" icon={faSleigh} />\n            <p class=\"m-0 logoText\">North Pole Post</p>\n          </div>\n        </Link>\n      </div>\n      <div class=\"col d-flex align-items-center justify-content-center\">\n        <Link className=\"navOption\" to=\"/about-us\">\n          About Us\n        </Link>\n\n        <div class=\"nav-item dropdown\">\n          <a\n            class=\"nav-link dropdown-toggle navOption\"\n            href=\"#\"\n            id=\"navbarDropdown\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Activities\n          </a>\n\n          <div\n            class=\"dropdown-menu navOption dropDownMenu\"\n            aria-labelledby=\"navbarDropdown\"\n          >\n            <Link className=\"dropdown-item dropDownOption\" to=\"/gift-list\">\n              Gift List\n            </Link>\n            <Link\n              className=\"dropdown-item dropDownOption\"\n              to=\"/advent-calender\"\n            >\n              Advent Calender\n            </Link>\n            <Link\n              className=\"dropdown-item dropDownOption\"\n              to=\"/Letter-to-Santa\"\n            >\n              Letter to Santa\n            </Link>\n            <Link className=\"dropdown-item dropDownOption\" to=\"/\">\n              Secret Santa\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col d-flex align-items-center justify-content-center\">\n        <div class=\"logDiv\">\n          {localStorage.loggedInUser ? (\n            <div>\n            <ChristmasButton\n              className=\"log\"\n              to=\"/login\"\n              text=\"logout\"\n              icon={faCandyCane}\n              onClick={logout}\n            />  \n            {console.log( \"logged in\" + localStorage.loggedInUser)}\n            </div>\n          ) : (\n            <div class=\"log\">\n              <ChristmasButton\n                className=\"log\"\n                icon={faCandyCane}\n                to=\"/login\"\n                text=\"Login\"\n              /> \n              {console.log(\"NOT logged in\" + localStorage.loggedInUser)}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js",["105"],"import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport stateReducer from \"./config/stateReducer\";\nimport { StateContext } from \"./config/store\";\nimport Login from \"./components/login\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/Register\";\nimport AboutUs from \"./components/AboutUs\";\nimport LetterToSantaController from \"./components/letterToSanta/LetterToSantaController\";\nimport GiftList from \"./components/giftList/GiftList\";\nimport AdventCalender from \"./components/AdventCalender\";\nimport Nav from \"./components/Nav\";\nimport SocialsBar from \"./components/SocialsBar\";\nimport \"./styles/partials/cane.scss\"; \nimport {getLoggedInUser } from \"./services/authServices\";\n\n\nfunction App() {\n  const initialState = {\n    giftLists: {},\n    letterToSanta: {\n      parentMode: true,\n      addForm: false,\n      currentChild: false,\n      children: [],\n      //  children to be an array of objects\n      // 1st e.g {name:\"jimmy\", uid:\"12312341\", list:[\"xbox\", \"socks\"]}   \n    },\n  };\n\n  const [store, dispatch] = useReducer(stateReducer, initialState); \n\n  useEffect(() => {\n    dispatch({\n        type: 'setLoggedInUser',\n        data: getLoggedInUser(),\n    });\n}, [localStorage.loggedInUser]) \n\n\n\n  return (\n    <div>\n      <StateContext.Provider value={{ store, dispatch }}>\n        <BrowserRouter>\n          <div class=\"allPageContainer\">\n            <div class=\"row p-0 m-0 d-flex justify-content-center\">\n              <div class=\"col-1 p-0\">\n                <div class=\"leftCane\"></div>\n              </div>\n\n              <div class=\"col-10 p-0 d-flex flex-column justify-content-between allPageGrid\">\n                <Nav />\n\n                <div class=\"d-flex flex-column align-items-center text-center\">\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/signup\" component={SignUp} />\n                  <Route exact path=\"/about-us\" component={AboutUs} />\n                  <Route\n                    exact\n                    path=\"/letter-to-santa\"\n                    component={LetterToSantaController}\n                  />\n                  <Route exact path=\"/gift-list\" component={GiftList} />\n                  <Route\n                    exact\n                    path=\"/advent-calender\"\n                    component={AdventCalender}\n                  />\n                  <Route exact path=\"/\" component={Home} />\n                </div>\n                <SocialsBar />\n              </div>\n\n              <div class=\"col-1 p-0\">\n                <div class=\"rightCane\"></div>\n              </div>\n            </div>\n          </div>\n        </BrowserRouter>\n      </StateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js",[],["106","107"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js",["108","109","110","111"],"import React from \"react\";\nimport \"../../styles/pages/giftCards.scss\";\nimport { useGlobalState } from \"../../config/store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { addGiftList, updateGiftList } from \"../../services/giftListServices\";\n\nconst List = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { giftLists, loggedInUser } = store;\n  const { identifer } = props;\n\n  //   deletes a selected gift and updates global state\n  const deleteGift = (event) => {\n    event.preventDefault();\n\n    giftLists[identifer].gifts.splice(event.target.getAttribute(\"index\"), 1);\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  const ColoredButton = styled.button`\n    color: #3f3f3f;\n    background-color: ${giftLists[identifer].color};\n\n    :hover {\n      background-color: #3f3f3f;\n      color: ${giftLists[identifer].color};\n    }\n  `;\n\n  // adds a gift to the global state\n  const saveList = (event) => {\n    event.preventDefault(); \n\n    console.log(\"saved list\")\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts = [event.target.addItem.value];\n\n      giftLists[identifer].receiver = event.target.name.value;\n\n      const restructuredGiftListSave = {\n        gifts: [{ gift: event.target.addItem.value }],\n        receiver: giftLists[identifer].receiver,\n        uid: identifer,\n      };\n\n      addGiftList(restructuredGiftListSave, localStorage.loggedInUser)\n        .then(() => { \n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } \n    event.target.addItem.value = \"\"\n  };\n\n  const updateList = (event) => {\n    event.preventDefault(); \n\n    console.log(\"added item to existing list\")\n\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts.push(event.target.addItem.value); \n\n      let formattedGifts = []\n\n      giftLists[identifer].gifts.map((v,i)=>{ \n        formattedGifts.push({gift: v})\n      })  \n\n      const restructuredGiftListUpdate = {\n        gifts: formattedGifts,\n        uid: identifer,\n      }; \n\n\n      updateGiftList(restructuredGiftListUpdate, localStorage.loggedInUser)\n        .then(() => { \n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }  \n    console.log(event.target.addItem.value)\n    event.target.addItem.value = \"\" \n    \n  };\n\n  const meColor = (event) => {\n    giftLists[identifer].color = event.target.value;\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  let cardStyle =\n    \"d-flex align-items-center justify-content-center flex-column\" +\n    ` ${giftLists[identifer].cardShape}`;\n\n  return (\n    <div\n      id={identifer}\n      style={{ backgroundColor: `${giftLists[identifer].color}` }}\n      class={cardStyle}\n    >\n      <div class=\"hole\"></div>\n      <form\n        class=\"d-flex flex-column align-items-center giftForm\"\n        onSubmit={giftLists[identifer].receiver ? updateList : saveList}\n      > \n\n        {giftLists[identifer].receiver ? (\n          <h3>{giftLists[identifer].receiver}</h3>\n        ) : (\n          <div>\n            <h3>Name</h3>\n            <input\n              class=\"nameInput\"\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={giftLists[identifer].receiver}\n              required\n            />\n          </div>\n        )}\n        <div class=\"row row-cols-2\">\n          {giftLists[identifer].gifts &&\n            giftLists[identifer].gifts.map((v, i) => { \n              console.log(v)\n              return (\n                <div\n                  key={i}\n                  class=\"gift col d-flex justify-content-center my-2\"\n                >\n                  <h4></h4>\n                  <p class=\"m-1\">{v}</p>\n                  <ColoredButton\n                    class={\"deleteGift\" + \"cardButton\"}\n                    index={i}\n                    onClick={deleteGift}\n                  >\n                    <div index={i}>Delete</div>\n                  </ColoredButton>\n                </div>\n              );\n            })}\n        </div>\n        List:\n        <input class=\"giftInput\" type=\"text\" name=\"addItem\" required></input>\n        <input\n          type=\"color\"\n          list=\"presetColors\"\n          value={giftLists[identifer].color}\n          onChange={meColor}\n        />\n        <datalist id=\"presetColors\">\n          <option>#ff857a</option>\n          <option>#e9ae81</option>\n          <option>#e9e481</option>\n          <option>#b7e981</option>\n          <option>#85e981</option>\n          <option>#81e9c1</option>\n          <option>#81dee9</option>\n          <option>#819be9</option>\n          <option>#9d81e9</option>\n          <option>#e981e9</option>\n          <option>#e98193</option>\n        </datalist>\n        <input\n          class=\"giftSubmit\"\n          type=\"submit\"\n          name=\"makeList\"\n          value={giftLists[identifer].receiver ? \"Add Gift\" : \"Save List\"}\n        />\n      </form>\n\n      <div class=\"d-flex align-items-center my-2\">\n        <div class=\"line\"></div>\n        <FontAwesomeIcon\n          className=\"giftCardIcon\"\n          icon={giftLists[identifer].icon}\n        />\n        <div class=\"line\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js",["112"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaController.js",["113","114"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaChild.js",["115","116","117","118"],"import { useGlobalState } from \"../../config/store\";\nimport React, { useState } from \"react\";\nimport { loginUser } from \"../../services/authServices\";\nimport { addChildGiftList } from \"../../services/childGiftListServices\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"../../styles/pages/letterToSanta.scss\";\nimport ChristmasButton from \"../ChristmasButton\";\n\nconst LetterToSantaChild = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { letterToSanta } = store;\n\n  const [showLogin, setShowLogin] = useState(false);\n  const [errors, setErrors] = useState([]);\n\n  const addPresent = (event) => {\n    event.preventDefault();\n\n    letterToSanta.children.map((v, i) => {\n      if (v.uid === letterToSanta.currentChild) {\n        return v.list.push(event.target.present.value);\n      }\n    });\n\n    console.log(letterToSanta.children);\n\n    event.target.present.value = \"\";\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  const finalizeList = (event) => {\n    event.preventDefault();\n\n    letterToSanta.children.map((v, i) => {\n      if (v.uid === letterToSanta.currentChild) {\n        console.log(v.list);\n\n        let formattedGifts = {\n          uid: uuidv4(),\n          gifts: [],\n        };\n\n        v.list.map((v, i) => {\n          formattedGifts.gifts.push({ gift: v });\n        });\n\n        addChildGiftList(letterToSanta.currentChild, formattedGifts)\n          .then()\n          .catch(console.log);\n      }\n    });\n\n    setShowLogin(true);\n  };\n\n  const loginSubmit = (event) => {\n    event.preventDefault();\n\n    let userDetails = {\n      username: event.target.username.value,\n      password: event.target.password.value,\n    };\n\n    console.log(userDetails);\n\n    loginUser(userDetails)\n      .then(() => {\n        letterToSanta.parentMode = true;\n        dispatch({\n          type: \"setLetterToSanta\",\n          data: letterToSanta,\n        });\n      })\n      .catch(() => {\n        setErrors([1]);\n      });\n  };\n\n  return (\n    <div>\n      <div class=\"row row-cols-2\">\n        <div class=\"col\">\n          <img\n            class=\"santa\"\n            src={window.location.origin + \"/images/dabbingSanta.png\"}\n            alt=\"santa\"\n          />\n        </div>\n        <div class=\"col\">\n          <h3>My List</h3>\n          <div class=\"childList\">\n            {letterToSanta.children.map((children, i) => {\n              if (children.uid === letterToSanta.currentChild) {\n                return children.list.map((present, i) => {\n                  console.log(present);\n                  return <li key={i}>{present}</li>;\n                });\n              }\n            })}\n          </div>\n        </div>\n      </div>\n      <p class=\"my-3\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus urna\n        magna, a luctus arcu dignissim at. Sed et lacus in urna auctor egestas.\n        Mauris mollis mauris ut augue tempor iaculis. Curabitur vitae erat urna.\n        Vivamus tristique cursus lacinia.\n      </p>\n\n      <form\n        onSubmit={addPresent}\n        class=\"d-flex justify-content-center align-items-center flex-column\"\n      >\n        <h3>What can santa get for you?</h3>\n        <input\n          required\n          type=\"text\"\n          name=\"present\"\n          placeholder=\"what would you like?\"\n        ></input>\n\n        <input\n          class=\"christmasInputButton buttonFont m-2\"\n          type=\"submit\"\n          value=\"Add Present\"\n        ></input>\n      </form>\n\n      {/* <button onClick={finalizeList}>All Done</button>  */}\n      <div class=\"d-flex justify-content-center align-items-center my-3\">\n        <ChristmasButton text=\"All Done\" onClick={finalizeList} />\n      </div>\n      <p>before you press this button go get your parent</p>\n      {/* implement password and username check */}\n      {showLogin ? (\n        <div class=\"secondaryLogin\">\n          {errors.length > 0 ? <h5 class=\"errors\">Thats not Right</h5> : \"\"}\n\n          <form\n            class=\"login d-flex flex-column align-items-center\"\n            onSubmit={loginSubmit}\n          > \n\n          <p>Go get your parent and get them to login to confirm your letter to santa!</p>\n            <label>Username</label>\n            <input\n              required\n              class=\"username mb-2\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter a username\"\n            ></input>\n\n            <label>Password</label>\n            <input\n              required\n              class=\"password mb-2\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter a password\"\n            ></input>\n\n            <input\n              class=\"christmasInputButton m-2\"\n              type=\"submit\"\n              value=\"Login\"\n            ></input>\n          </form>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default LetterToSantaChild;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaParent.js",["119","120","121","122"],"import { useGlobalState } from \"../../config/store\";\nimport AddChildForm from \"./AddChildForm\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  getChildren,\n  getChildGiftList,\n} from \"../../services/childGiftListServices\";\nimport { Redirect } from \"react-router-dom\"; \nimport \"../../styles/pages/letterToSanta.scss\"\n\nconst LetterToSantaParent = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { letterToSanta, loggedInUser } = store;\n\n  let [viewed, setViewed] = useState([]);\n\n  // use effect extracts data from data base and puts it into\n  // rteadable gloabl state format\n  useEffect(() => {\n    // extracts names and uid\n    getChildren(localStorage.loggedInUser)\n      .then((data) => {\n        data.children.map(async (child, i) => {\n          let formattedObj = {\n            list: [],\n            name: child.name,\n            uid: child.childUid,\n          };\n\n          // extacts list\n          await getChildGiftList(child.childUid).then((listData) => {\n            if (listData[0]) {\n              listData[0].gifts.map((gift, i) => {\n                if (gift.gift) {\n                  formattedObj.list.push(gift.gift);\n                }\n              });\n            }\n          });\n\n          viewed.push(formattedObj);\n          setViewed(viewed);\n          letterToSanta.children = viewed;\n\n          dispatch({\n            type: \"setLetterToSanta\",\n            data: letterToSanta,\n          });\n        });\n      })\n      .catch(console.log);\n  }, (viewed = []));\n\n  // makes a form to be filled out with child details\n  // cannot make another form if there already is another\n  // prompts user to fill out existing form\n  const addChildForm = (event) => {\n    event.preventDefault();\n\n    letterToSanta.addForm = true;\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  // changes the page into child mode and enables child list creation  \n  // for specified child\n  const createList = (event) => {\n    event.preventDefault();\n\n    letterToSanta.parentMode = false;\n\n    letterToSanta.currentChild = event.target.getAttribute(\"uid\");\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  return (\n    <div> \n      {/* checks if user is logged in */}\n      {!localStorage.loggedInUser ? <Redirect to=\"/login\" /> : \"\"}\n      <h1 class=\"my-5\"><u>Parent Mode</u></h1>\n      \n      <div class=\"row\">\n      <div class=\"col d-flex flex-column aling-items-center justify-content-center\">\n      <h3>How it works?</h3>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus urna\n        magna, a luctus arcu dignissim at. Sed et lacus in urna auctor egestas.\n        Mauris mollis mauris ut augue tempor iaculis. Curabitur vitae erat urna.\n        Vivamus tristique cursus lacinia.\n      </p> \n      </div> \n\n       <div class=\"col\">\n      <h3>Manage Children</h3>\n      <div class=\"childrenDiv\"> \n      \n      {/* creates popout elements containing relevent childs list  */} \n      <div class=\"row row-cols-2\"> \n        {letterToSanta.children.length > 0 ? (\n          letterToSanta.children.map((v, i) => {\n            // put get child gift list here\n            // child name is also needed so getChildren too\n            const popover = (\n              <Popover id={i}>\n                <Popover.Title as=\"h3\">{v.name}'s List</Popover.Title>\n                <Popover.Content>\n                  {v.list.map((gift, i) => {\n                    return <li>{gift}</li>;\n                  })}\n                </Popover.Content>\n              </Popover>\n            );\n            \n            return (\n              <div key={i} class=\"d-flex justify-content-center childAndButton\"> \n              <div class=\"col m-2\">\n                <p>{v.name}</p> \n                {v.list.length > 0 ? (\n                  <div class=\"d-flex flex-column justify-content-center align-items-center\">\n                    <OverlayTrigger\n                      trigger=\"click\"\n                      placement=\"right\"\n                      overlay={popover}\n                    >\n                      <button uid={v.uid} class=\"christmasButtonLetter\">View List</button>\n                    </OverlayTrigger> \n                    </div>                  \n                ) : ( \n                  <div class=\"d-flex flex-column justify-content-center align-items-center\">\n                  <button uid={v.uid} onClick={createList} class=\"christmasButtonLetter\">\n                    Create List\n                  </button> \n                  </div>\n                )}\n              </div> \n              </div> \n              \n            ); \n          })  \n        ) : (\n          <div> None Here Yet </div>\n        )}\n      </div> \n      <div class=\"d-flex flex-column justify-content-center align-items-center my-2\">\n      <button class=\"christmasButtonLetter\" onClick={addChildForm}>Add Child</button>\n      </div>  \n\n      {letterToSanta.addForm ? <AddChildForm /> : \"\"}\n    </div> \n    </div> \n    </div> \n    </div> \n  );\n};\n\nexport default LetterToSantaParent;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/AddChildForm.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/childGiftListServices.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/authServices.js",[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":1,"nodeType":"125","endLine":26,"endColumn":2},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":24,"column":7,"nodeType":"132","endLine":24,"endColumn":20},{"ruleId":"130","severity":1,"message":"133","line":24,"column":7,"nodeType":"132","endLine":24,"endColumn":20,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":71,"column":25,"nodeType":"137","messageId":"138","endLine":71,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":73,"column":30,"nodeType":"137","messageId":"138","endLine":73,"endColumn":32},{"ruleId":"126","replacedBy":"139"},{"ruleId":"128","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":67,"column":11,"nodeType":"143","endLine":75,"endColumn":12},{"ruleId":"130","severity":1,"message":"144","line":38,"column":4,"nodeType":"145","endLine":38,"endColumn":31,"suggestions":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":10,"column":22,"nodeType":"151","messageId":"152","endLine":10,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":77,"column":43,"nodeType":"137","messageId":"138","endLine":77,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":151,"column":19,"nodeType":"143","endLine":151,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":154,"column":41,"nodeType":"157","messageId":"158","endLine":154,"endColumn":42},{"ruleId":"149","severity":1,"message":"159","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":17,"column":6,"nodeType":"157","endLine":17,"endColumn":40},{"ruleId":"130","severity":1,"message":"160","line":17,"column":6,"nodeType":"157","endLine":17,"endColumn":40,"suggestions":"161"},{"ruleId":"135","severity":1,"message":"162","line":19,"column":39,"nodeType":"137","messageId":"163","endLine":19,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":38,"column":39,"nodeType":"137","messageId":"138","endLine":38,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":47,"column":27,"nodeType":"137","messageId":"138","endLine":47,"endColumn":29},{"ruleId":"135","severity":1,"message":"162","line":96,"column":55,"nodeType":"137","messageId":"163","endLine":96,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":16,"column":26,"nodeType":"151","messageId":"152","endLine":16,"endColumn":38},{"ruleId":"135","severity":1,"message":"136","line":36,"column":47,"nodeType":"137","messageId":"138","endLine":36,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":55,"column":7,"nodeType":"132","endLine":55,"endColumn":18},{"ruleId":"130","severity":1,"message":"164","line":55,"column":7,"nodeType":"132","endLine":55,"endColumn":18,"suggestions":"165"},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","AssignmentExpression","React Hook useEffect has missing dependencies: 'extractData' and 'listData'. Either include them or remove the dependency array. You can also do a functional update 'setListData(l => ...)' if you only need 'listData' in the 'setListData' call.",["168"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["166"],["167"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has an unnecessary dependency: 'localStorage.loggedInUser'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage.loggedInUser' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["169"],["166"],["167"],"no-unused-vars","'loggedInUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'letterToSanta'. Either include them or remove the dependency array.",["170"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'dispatch', 'letterToSanta', and 'viewed'. Either include them or remove the dependency array. You can also do a functional update 'setViewed(v => ...)' if you only need 'viewed' in the 'setViewed' call.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [extractData, listData]",{"range":"180","text":"181"},"Update the dependencies array to be: []",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch, letterToSanta]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, letterToSanta, viewed]",{"range":"186","text":"187"},[667,680],"[extractData, listData]",[1252,1279],"[]",[475,509],"[dispatch, letterToSanta]",[1661,1672],"[dispatch, letterToSanta, viewed]"]