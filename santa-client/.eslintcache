[{"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js":"1","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js":"2","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js":"3","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js":"4","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js":"5","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js":"6","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js":"7","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js":"8","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js":"9","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js":"10","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js":"11","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js":"12","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js":"13","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js":"14","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js":"15","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaController.js":"16","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaChild.js":"17","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaParent.js":"18","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/AddChildForm.js":"19","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/childGiftListServices.js":"20"},{"size":443,"mtime":1610492179098,"results":"21","hashOfConfig":"22"},{"size":750,"mtime":1610426388522,"results":"23","hashOfConfig":"22"},{"size":4055,"mtime":1610680780877,"results":"24","hashOfConfig":"22"},{"size":220,"mtime":1606693340905,"results":"25","hashOfConfig":"22"},{"size":3249,"mtime":1610853905904,"results":"26","hashOfConfig":"22"},{"size":132,"mtime":1606871041107,"results":"27","hashOfConfig":"22"},{"size":2569,"mtime":1610666993192,"results":"28","hashOfConfig":"22"},{"size":2580,"mtime":1610490384049,"results":"29","hashOfConfig":"22"},{"size":153,"mtime":1606695744305,"results":"30","hashOfConfig":"22"},{"size":137,"mtime":1606697923049,"results":"31","hashOfConfig":"22"},{"size":5197,"mtime":1610427923757,"results":"32","hashOfConfig":"22"},{"size":2598,"mtime":1610506349723,"results":"33","hashOfConfig":"22"},{"size":890,"mtime":1610414756568,"results":"34","hashOfConfig":"22"},{"size":773,"mtime":1610412579335,"results":"35","hashOfConfig":"22"},{"size":2719,"mtime":1610426376646,"results":"36","hashOfConfig":"22"},{"size":743,"mtime":1610508662446,"results":"37","hashOfConfig":"22"},{"size":4248,"mtime":1610853560436,"results":"38","hashOfConfig":"22"},{"size":4529,"mtime":1610853527596,"results":"39","hashOfConfig":"22"},{"size":1670,"mtime":1610667368200,"results":"40","hashOfConfig":"22"},{"size":905,"mtime":1610661773811,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"es6r8m",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/stateReducer.js",["87"],"export default function (state, action) {\n  switch (action.type) {\n    case \"setLoggedInUser\": {\n      return {\n        ...state,\n        loggedInUser: action.data,\n      };\n    }\n\n    case \"setGiftLists\": {\n      return {\n        ...state,\n        giftLists: action.data,\n      };\n    }\n\n    case \"setLetterToSanta\": {\n      return {\n        ...state,\n        letterToSanta: action.data,\n      };\n    }\n    default:\n      return state;\n  }\n}\n",["88","89"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/SocialsBar.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/GiftList.js",["90","91","92","93"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/store.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Nav.js",["94"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AboutUs.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/App.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Register.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/AdventCalender.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/config/api.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/giftList/List.js",["95","96"],"import React from \"react\";\nimport \"../../styles/pages/giftCards.scss\";\nimport { useGlobalState } from \"../../config/store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { addGiftList, updateGiftList } from \"../../services/giftListServices\";\n\nconst List = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { giftLists, loggedInUser } = store;\n  const { identifer } = props;\n\n  //   deletes a selected gift and updates global state\n  const deleteGift = (event) => {\n    event.preventDefault();\n\n    giftLists[identifer].gifts.splice(event.target.getAttribute(\"index\"), 1);\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  const ColoredButton = styled.button`\n    color: #3f3f3f;\n    background-color: ${giftLists[identifer].color};\n\n    :hover {\n      background-color: #3f3f3f;\n      color: ${giftLists[identifer].color};\n    }\n  `;\n\n  // adds a gift to the global state\n  const saveList = (event) => {\n    event.preventDefault();\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts = [event.target.addItem.value];\n\n      giftLists[identifer].receiver = event.target.name.value;\n\n      const restructuredGiftListSave = {\n        gifts: [{ gift: event.target.addItem.value }],\n        receiver: giftLists[identifer].receiver,\n        uid: identifer,\n      };\n\n      addGiftList(restructuredGiftListSave, loggedInUser)\n        .then(() => {\n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const updateList = (event) => {\n    event.preventDefault();\n\n    if (giftLists[identifer]) {\n      giftLists[identifer].gifts.push(event.target.addItem.value);\n\n      const restructuredGiftListUpdate = {\n        gifts: [{ gift: event.target.addItem.value }],\n        uid: identifer,\n      };\n\n      updateGiftList(restructuredGiftListUpdate, loggedInUser)\n        .then(() => {\n          dispatch({\n            type: \"setGiftLists\",\n            data: giftLists,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const meColor = (event) => {\n    giftLists[identifer].color = event.target.value;\n\n    dispatch({\n      type: \"setGiftLists\",\n      data: giftLists,\n    });\n  };\n\n  let cardStyle =\n    \"d-flex align-items-center justify-content-center flex-column\" +\n    ` ${giftLists[identifer].cardShape}`;\n\n  return (\n    <div\n      id={identifer}\n      style={{ backgroundColor: `${giftLists[identifer].color}` }}\n      class={cardStyle}\n    >\n      {console.log(giftLists[identifer].receiver)}\n      {console.log(giftLists[identifer])}\n\n      <div class=\"hole\"></div>\n      <form\n        class=\"d-flex flex-column align-items-center giftForm\"\n        onSubmit={giftLists[identifer].receiver ? updateList : saveList}\n      >\n        {giftLists[identifer].receiver ? (\n          <h3>{giftLists[identifer].receiver}</h3>\n        ) : (\n          <div>\n            <h3>Name</h3>\n            <input\n              class=\"nameInput\"\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={giftLists[identifer].receiver}\n              required\n            />\n          </div>\n        )}\n        <div class=\"row row-cols-2\">\n          {giftLists[identifer].gifts &&\n            giftLists[identifer].gifts.map((v, i) => {\n              return (\n                <div\n                  key={i}\n                  class=\"gift col d-flex justify-content-center my-2\"\n                >\n                  <h4></h4>\n                  <p class=\"m-1\">{v}</p>\n                  <ColoredButton\n                    class={\"deleteGift\" + \"cardButton\"}\n                    index={i}\n                    onClick={deleteGift}\n                  >\n                    <div index={i}>Delete</div>\n                  </ColoredButton>\n                </div>\n              );\n            })}\n        </div>\n        List:\n        <input class=\"giftInput\" type=\"text\" name=\"addItem\" required></input>\n        <input\n          type=\"color\"\n          list=\"presetColors\"\n          value={giftLists[identifer].color}\n          onChange={meColor}\n        />\n        <datalist id=\"presetColors\">\n          <option>#ff857a</option>\n          <option>#e9ae81</option>\n          <option>#e9e481</option>\n          <option>#b7e981</option>\n          <option>#85e981</option>\n          <option>#81e9c1</option>\n          <option>#81dee9</option>\n          <option>#819be9</option>\n          <option>#9d81e9</option>\n          <option>#e981e9</option>\n          <option>#e98193</option>\n        </datalist>\n        <input\n          class=\"giftSubmit\"\n          type=\"submit\"\n          name=\"makeList\"\n          value={giftLists[identifer].receiver ? \"Add Gift\" : \"Save List\"}\n        />\n      </form>\n\n      <div class=\"d-flex align-items-center my-2\">\n        <div class=\"line\"></div>\n        <FontAwesomeIcon\n          className=\"giftCardIcon\"\n          icon={giftLists[identifer].icon}\n        />\n        <div class=\"line\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/login.js",["97"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/giftListServices.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/ChristmasButton.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/Home.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaController.js",["98","99"],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaChild.js",["100","101","102","103"],"import { useGlobalState } from \"../../config/store\";\nimport React, { useState } from \"react\";\nimport { loginUser } from \"../../services/authServices\";\nimport { addChildGiftList } from \"../../services/childGiftListServices\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst LetterToSantaChild = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { letterToSanta } = store;\n\n  const [showLogin, setShowLogin] = useState(false);\n  const [errors, setErrors] = useState([]);\n\n  const addPresent = (event) => {\n    event.preventDefault();\n\n    letterToSanta.children.map((v, i) => {\n      if (v.uid === letterToSanta.currentChild) {\n        return v.list.push(event.target.present.value);\n      }\n    });\n\n    console.log(letterToSanta.children);\n\n    event.target.present.value = \"\";\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  const finalizeList = (event) => {\n    event.preventDefault();\n\n    console.log(letterToSanta);\n\n    letterToSanta.children.map((v, i) => {\n      if (v.uid === letterToSanta.currentChild) {\n        console.log(v.list);\n\n        let formattedGifts = {\n          uid: uuidv4(),\n          gifts: [],\n        };\n\n        v.list.map((v, i) => {\n          formattedGifts.gifts.push({ gift: v });\n        });\n\n        console.log(letterToSanta.currentChild);\n        console.log(formattedGifts);\n\n        addChildGiftList(letterToSanta.currentChild, formattedGifts)\n          .then()\n          .catch(console.log);\n      }\n    });\n\n    setShowLogin(true);\n  };\n\n  const loginSubmit = (event) => {\n    event.preventDefault();\n\n    let userDetails = {\n      username: event.target.username.value,\n      password: event.target.password.value,\n    };\n\n    console.log(userDetails);\n\n    loginUser(userDetails)\n      .then(() => {\n        letterToSanta.parentMode = true;\n        dispatch({\n          type: \"setLetterToSanta\",\n          data: letterToSanta,\n        });\n      })\n      .catch(() => {\n        setErrors([1]);\n      });\n  };\n\n  return (\n    <div>\n      <h3>Santa Here</h3>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus urna\n        magna, a luctus arcu dignissim at. Sed et lacus in urna auctor egestas.\n        Mauris mollis mauris ut augue tempor iaculis. Curabitur vitae erat urna.\n        Vivamus tristique cursus lacinia.\n      </p>\n\n      <form onSubmit={addPresent}>\n        <h3>What can santa get for you?</h3>\n        <input\n          required\n          type=\"text\"\n          name=\"present\"\n          placeholder=\"what would you like?\"\n        ></input>\n\n        <input\n          class=\"christmasInputButton m-2\"\n          type=\"submit\"\n          value=\"Add Present\"\n        ></input>\n      </form>\n\n      <h3>My List</h3>\n      <div class=\"childList\">\n        {letterToSanta.children.map((children, i) => {\n          if (children.uid === letterToSanta.currentChild) {\n            return children.list.map((present, i) => {\n              console.log(present);\n              return <li key={i}>{present}</li>;\n            });\n          }\n        })}\n      </div>\n\n      <button onClick={finalizeList}>All Done</button>\n      <p>before you press this button go get your parent</p>\n      {/* implement password and username check */}\n      {showLogin ? (\n        <div>\n          {errors.length > 0 ? <h5 class=\"errors\">Thats not Right</h5> : \"\"}\n\n          <form\n            class=\"login d-flex flex-column align-items-center\"\n            onSubmit={loginSubmit}\n          >\n            <label>Username</label>\n            <input\n              required\n              class=\"username mb-2\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter a username\"\n            ></input>\n\n            <label>Password</label>\n            <input\n              required\n              class=\"password mb-2\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter a password\"\n            ></input>\n\n            <input\n              class=\"christmasInputButton m-2\"\n              type=\"submit\"\n              value=\"Login\"\n            ></input>\n          </form>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default LetterToSantaChild;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/LetterToSantaParent.js",["104","105","106"],"import { useGlobalState } from \"../../config/store\";\nimport AddChildForm from \"./AddChildForm\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  getChildren,\n  getChildGiftList,\n} from \"../../services/childGiftListServices\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LetterToSantaParent = (props) => {\n  const { store, dispatch } = useGlobalState();\n  const { letterToSanta, loggedInUser } = store;\n\n  let [viewed, setViewed] = useState([]);\n\n  // use effect extracts data from data base and puts it into\n  // rteadable gloabl state format\n  useEffect(() => {\n    // extracts names and uid\n    getChildren(loggedInUser)\n      .then((data) => {\n        data.children.map(async (child, i) => {\n          let formattedObj = {\n            list: [],\n            name: child.name,\n            uid: child.childUid,\n          };\n\n          // extacts list\n          await getChildGiftList(child.childUid).then((listData) => {\n            if (listData[0]) {\n              listData[0].gifts.map((gift, i) => {\n                if (gift.gift) {\n                  formattedObj.list.push(gift.gift);\n                }\n              });\n            }\n          });\n\n          viewed.push(formattedObj);\n          setViewed(viewed);\n          letterToSanta.children = viewed;\n\n          dispatch({\n            type: \"setLetterToSanta\",\n            data: letterToSanta,\n          });\n        });\n      })\n      .catch(console.log);\n  }, (viewed = []));\n\n  // makes a form to be filled out with child details\n  // cannot make another form if there already is another\n  // prompts user to fill out existing form\n  const addChildForm = (event) => {\n    event.preventDefault();\n\n    letterToSanta.addForm = true;\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  // changes the page into child mode and enables child list creation  \n  // for specified child\n  const createList = (event) => {\n    event.preventDefault();\n\n    letterToSanta.parentMode = false;\n\n    letterToSanta.currentChild = event.target.getAttribute(\"uid\");\n\n    dispatch({\n      type: \"setLetterToSanta\",\n      data: letterToSanta,\n    });\n  };\n\n  return (\n    <div> \n      {/* checks if user is logged in */}\n      {!loggedInUser ? <Redirect to=\"/login\" /> : \"\"}\n      <h1>Parent Mode</h1>\n\n      <h3>How it works?</h3>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus urna\n        magna, a luctus arcu dignissim at. Sed et lacus in urna auctor egestas.\n        Mauris mollis mauris ut augue tempor iaculis. Curabitur vitae erat urna.\n        Vivamus tristique cursus lacinia.\n      </p>\n\n      <h3>Manage Children</h3>\n      <div class=\"childrenDiv\"> \n      {/* creates popout elements containing relevent childs list  */}\n        {letterToSanta.children.length > 0 ? (\n          letterToSanta.children.map((v, i) => {\n            // put get child gift list here\n            // child name is also needed so getChildren too\n            const popover = (\n              <Popover id={i}>\n                <Popover.Title as=\"h3\">{v.name}'s List</Popover.Title>\n                <Popover.Content>\n                  {v.list.map((gift, i) => {\n                    return <li>{gift}</li>;\n                  })}\n                </Popover.Content>\n              </Popover>\n            );\n\n            return (\n              <div key={i}>\n                <p>{v.name}</p>\n                {console.log(v.list)}\n                {v.list.length > 0 ? (\n                  <div>\n                    <OverlayTrigger\n                      trigger=\"click\"\n                      placement=\"right\"\n                      overlay={popover}\n                    >\n                      <Button uid={v.uid} variant=\"success\">\n                        View List\n                      </Button>\n                    </OverlayTrigger>\n                  </div>\n                ) : (\n                  <button uid={v.uid} onClick={createList}>\n                    Create List\n                  </button>\n                )}\n              </div>\n            );\n          })\n        ) : (\n          <div> None Here Yet </div>\n        )}\n      </div>\n      <button onClick={addChildForm}>Add Child</button>\n\n      {letterToSanta.addForm ? <AddChildForm /> : \"\"}\n    </div>\n  );\n};\n\nexport default LetterToSantaParent;\n","/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/components/letterToSanta/AddChildForm.js",[],"/mnt/c/Users/Jordon/projects/javascript/santaMERN/Client/santa-client/src/services/childGiftListServices.js",[],{"ruleId":"107","severity":1,"message":"108","line":1,"column":1,"nodeType":"109","endLine":26,"endColumn":2},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":24,"column":7,"nodeType":"116","endLine":24,"endColumn":20},{"ruleId":"114","severity":1,"message":"117","line":24,"column":7,"nodeType":"116","endLine":24,"endColumn":20,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":71,"column":25,"nodeType":"121","messageId":"122","endLine":71,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":73,"column":30,"nodeType":"121","messageId":"122","endLine":73,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":65,"column":11,"nodeType":"125","endLine":73,"endColumn":12},{"ruleId":"126","severity":1,"message":"127","line":137,"column":19,"nodeType":"125","endLine":137,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":140,"column":41,"nodeType":"130","messageId":"131","endLine":140,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":19,"column":21,"nodeType":"134","messageId":"135","endLine":19,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":40},{"ruleId":"114","severity":1,"message":"136","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":40,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"138","line":17,"column":39,"nodeType":"121","messageId":"139","endLine":17,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":38,"column":39,"nodeType":"121","messageId":"122","endLine":38,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":47,"column":27,"nodeType":"121","messageId":"122","endLine":47,"endColumn":29},{"ruleId":"119","severity":1,"message":"138","line":114,"column":51,"nodeType":"121","messageId":"139","endLine":114,"endColumn":53},{"ruleId":"119","severity":1,"message":"120","line":36,"column":47,"nodeType":"121","messageId":"122","endLine":36,"endColumn":49},{"ruleId":"114","severity":1,"message":"115","line":55,"column":7,"nodeType":"116","endLine":55,"endColumn":18},{"ruleId":"114","severity":1,"message":"140","line":55,"column":7,"nodeType":"116","endLine":55,"endColumn":18,"suggestions":"141"},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","AssignmentExpression","React Hook useEffect has missing dependencies: 'extractData' and 'listData'. Either include them or remove the dependency array. You can also do a functional update 'setListData(l => ...)' if you only need 'listData' in the 'setListData' call.",["144"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'letterToSanta'. Either include them or remove the dependency array.",["145"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'dispatch', 'letterToSanta', 'loggedInUser', and 'viewed'. Either include them or remove the dependency array. You can also do a functional update 'setViewed(v => ...)' if you only need 'viewed' in the 'setViewed' call.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [extractData, listData]",{"range":"153","text":"154"},"Update the dependencies array to be: [dispatch, letterToSanta]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, letterToSanta, loggedInUser, viewed]",{"range":"157","text":"158"},[681,694],"[extractData, listData]",[475,509],"[dispatch, letterToSanta]",[1645,1656],"[dispatch, letterToSanta, loggedInUser, viewed]"]